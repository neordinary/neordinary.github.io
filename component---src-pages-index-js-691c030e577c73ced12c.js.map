{"version":3,"file":"component---src-pages-index-js-691c030e577c73ced12c.js","mappings":"qIAmCA,IAhCe,SAAH,GAAuC,IAG7CA,EAHYC,EAAQ,EAARA,SAAUC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAE3BC,EAD6B,MAChBH,EAASI,SAiB5B,OAbEL,EADEI,EAEA,sBAAIE,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKN,IAKhB,gBAAC,EAAAK,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCN,GAML,uBAAKI,UAAU,iBAAiB,oBAAmBF,GACjD,0BAAQE,UAAU,iBAAiBN,GACnC,4BAAOG,GACP,oCACK,IAAIM,MAAOC,cAAa,+BAE3B,qBAAGC,KAAK,4BAA0B,WAI1C,C,+CCtBMC,EAAM,SAAH,GAAgD,IAAD,MAAzCC,EAAW,EAAXA,YAAmBX,GAAF,EAAJY,KAAW,EAALZ,OAAOC,EAAQ,EAARA,SAC/BY,GAASC,EAAAA,EAAAA,gBAAe,cAAxBD,KAgBFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBhB,MAExC,OACE,gCACE,6BAAQiB,EAAkBjB,EAAK,MAAMiB,EAAiBjB,GACtD,wBAAMkB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASnB,IACnC,wBAAMoB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASnB,IACpC,wBAAMkB,KAAK,sBAAsBC,QAASJ,IACzCd,EAGP,EAEAS,EAAIa,aAAe,CACjBZ,YAAY,IAQd,K,sHCnBA,EA9BY,WAAO,IAAD,EAkBVa,EAA+B,QAAzB,GAjBCV,EAAAA,EAAAA,gBAAe,cAiBRD,KAAKG,oBAAY,aAAtB,EAAwBQ,OACvC,OACE,uBAAKpB,UAAU,QACZoB,aAAM,EAANA,EAAQN,OACP,uCACa,8BAASM,EAAON,MAAc,KAAEM,aAAM,EAANA,EAAQC,UAAW,MAKxE,E,oBCyBA,EAxDkB,SAAH,GAA4B,IAAD,EAArBC,EAAI,EAAJA,KAAM3B,EAAQ,EAARA,SACnB4B,GAAkC,QAAtB,EAAAD,EAAKb,KAAKG,oBAAY,aAAtB,EAAwBhB,QAAK,QACzC4B,EAAQF,EAAKG,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAM,CAAChC,SAAUA,EAAUC,MAAO2B,GACjC,gBAAC,EAAG,MACJ,uLAUJ,gBAAC,IAAM,CAAC5B,SAAUA,EAAUC,MAAO2B,GACjC,gBAAC,EAAG,MACJ,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMnC,EAAQmC,EAAKC,YAAYpC,OAASmC,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACElC,UAAU,iBACVoC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAApC,KAAI,CAACC,GAAI6B,EAAKE,OAAOC,KAAMI,SAAS,OACnC,wBAAMA,SAAS,YAAY1C,KAG/B,6BAAQmC,EAAKC,YAAYZ,OAAM,KAAIW,EAAKC,YAAYO,WAAU,OAAMR,EAAKC,YAAYQ,OAEvF,+BACE,qBACEC,wBAAyB,CACvBC,OAAQX,EAAKC,YAAYzB,aAAewB,EAAKY,SAE/CL,SAAS,kBAMrB,KAIR,EASaM,EAAO,WAAH,OAAS,gBAAC,IAAG,CAAChD,MAAM,aAAc,C","sources":["webpack://neordinary/./src/components/layout.js","webpack://neordinary/./src/components/seo.js","webpack://neordinary/./src/components/bio.js","webpack://neordinary/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()} NE(O)RDINARY Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.author} ({post.frontmatter.authorMail}) - {post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          author\n          authorMail\n        }\n      }\n    }\n  }\n`\n"],"names":["header","location","title","children","isRootPath","pathname","className","Link","to","Date","getFullYear","href","Seo","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","author","summary","data","siteTitle","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","authorMail","date","dangerouslySetInnerHTML","__html","excerpt","Head"],"sourceRoot":""}