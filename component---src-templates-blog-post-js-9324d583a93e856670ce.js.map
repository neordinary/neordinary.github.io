{"version":3,"file":"component---src-templates-blog-post-js-9324d583a93e856670ce.js","mappings":"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","sources":["webpack://neordinary/./src/components/layout.js","webpack://neordinary/./src/components/seo.js","webpack://neordinary/./src/components/utterances.tsx","webpack://neordinary/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()} NE(O)RDINARY Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React, { createRef, useLayoutEffect } from \"react\"\n\nconst src = 'https://utteranc.es/client.js'\n\nexport interface IUtterancesProps {\n    repo: string;\n    theme: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo, theme }) => {\n    const containerRef = createRef<HTMLDivElement>();\n\n    useLayoutEffect(() => {\n        const utterances = document.createElement('script');\n\n        const attributes = {\n            src,\n            repo,\n            theme,\n            'issue-term': 'pathname',\n            label: 'post comment',\n            crossOrigin: 'anonymous',\n            async: 'true'\n        };\n\n        Object.entries(attributes).forEach(([key, value]) => {\n            utterances.setAttribute(key, value);\n        });\n\n        containerRef.current!.appendChild(utterances);\n    }, [repo]);\n\n    return <div ref={containerRef} />;\n});\n\nUtterances.displayName = 'Utterances';\n\nexport default Utterances;","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Utterances from \"../components/utterances\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.author} (<a href={\"mailto:\" + post.frontmatter.authorMail}>{post.frontmatter.authorMail}</a>)- {post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Utterances repo=\"neordinary/neordinary.github.io\" theme=\"github-light\" />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        description\n        author\n        authorMail\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["header","location","title","children","isRootPath","pathname","className","Link","to","Date","getFullYear","href","Seo","description","lang","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps","Utterances","React","repo","theme","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","Head","post","data","markdownRemark","frontmatter","excerpt","previous","next","siteTitle","itemScope","itemType","itemProp","author","authorMail","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}